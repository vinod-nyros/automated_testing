box: python:2.7-slim
dev:
  steps:
    - pip-install
    - internal/watch:
        code: python manage.py runserver
        reload: true


# # Build definition
# build:
#   # The steps that will be executed on build
#   steps:
#     # A step that executes `pip install` command
#     - pip-install

#     # A custom script step, name value is used in the UI
#     # and the code value contains the command that get executed
#     - script:
#         name: python unit test
#         code: |
#           python app_test.py



# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: debian
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - script:
        name: echo
        code: |
          echo "hello world!"

box: python:2.7-slim
dev:
  steps:
    - pip-install
    - internal/watch:
        code: python manage.py runserver
        reload: true

box: python:2.7
  services:
    - wercker/postgresql
  build:
    steps:
      - script:
          name: test
          code: |
            python manage.py test 

